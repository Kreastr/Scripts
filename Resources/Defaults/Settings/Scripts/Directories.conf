
# Handle GoboLinux-style goboInstall directory
# (conditional based on goboInstall defined in GoboPath)
if [ "$goboInstall" -a "$goboInstall" != "$goboPrograms" ]
then
   directoriesHandleInstall=yes
else
   directoriesHandleInstall=no
   goboInstall="$goboPrograms"
fi

if [ ! "$goboRuntimePicture" ]
then goboRuntimePicture="$goboPrograms"
fi

# Handle GoboLinux-style Current link
directoriesHandleCurrent=yes
# Handle GoboLinux-style share/Shared conversion
directoriesHandleShared=yes
# Handle GoboLinux-style share/man -> man
directoriesHandleManuals=no

# Use Sandbox
directoriesSandbox=yes

installPicture="$goboInstall"
runtimePicture="$goboRuntimePicture"

installNPicture="$installPicture/&NAME"
installSettingsNPicture="$installPicture/&NAME/&VERSION/Resources/Defaults/Settings"
installVariableNPicture="${goboVariable}"

installNVPicture="$installPicture/&NAME/&VERSION"
installSettingsNVPicture="$installPicture/&NAME/&VERSION/Resources/Defaults/Settings"
installVariableNVPicture="${goboVariable}"

runtimeNPicture="$runtimePicture/&NAME"
runtimeSettingsNPicture="$runtimePicture/&NAME/Settings"
runtimeVariableNPicture="${goboVariable}"

runtimeNVPicture="$runtimePicture/&NAME/&VERSION"
runtimeSettingsNVPicture="$runtimePicture/&NAME/Settings"
runtimeVariableNVPicture="${goboVariable}"

linkerNVPicture="/lib/ld-linux.so.2"

# UnionFS implementation to be used in the scripts, in order of preference.
# Supported ones are 'unionfs', 'funionfs' and 'unionfs-fuse'.
unionImplementations=(
    "overlayfs"
    "unionfs-fuse"
    "unionfs"
    "funionfs"
)

# Array of directories to map in UnionSandbox
unionSandbox=(
    "/Programs"
    "/System"
    "/Data"
    "/Users"
)

# Must NOT be within unionSandbox!!!!
# Mountpoint for sandbox
unionSandboxMP="/.union_mp"
# RW branch for sandbox
unionSandboxRW="/.union_rw"

